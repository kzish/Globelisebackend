variables:
  CARGO_HOME: ${CI_PROJECT_DIR}/.cargo

default:
  image: rust:latest
  cache:
    - &cargo_registry
      key: cargo-registry
      paths:
        - .cargo/registry/index/
        - .cargo/registry/cache/
        - .cargo/git/db/
    - &cargo_artifacts
      key: cargo-artifacts
      paths:
        - target/
  before_script:
    - rustup component add rustfmt # Required for Dapr build script
    - apt install build-essential -y

.cargo-tools:
  - &cargo_tools
    key: cargo-tools
    paths:
      - .cargo/bin/
      - .cargo/.crates.toml
      - .cargo/.crates2.json
    policy: pull

install-tools:
  stage: install-test-tools
  cache:
    - <<: *cargo_registry
      policy: pull-push
    - <<: *cargo_tools
      policy: pull-push
    - key: cargo-tools-artifacts
      paths:
        - target-tools/
  variables:
    CARGO_TARGET_DIR: target-tools/
  script:
    - cargo install cargo-nextest
    - cargo install cargo-tarpaulin
    - cargo install cargo-deny

test:
  stage: test
  cache:
    - <<: *cargo_registry
      policy: pull
    - <<: *cargo_artifacts
      policy: pull
    - <<: *cargo_tools
  script:
    - cargo nextest --config-file nextest.toml run -P ci --no-fail-fast
  artifacts:
    when: always
    reports:
      junit: target/nextest/ci/junit.xml

coverage:
  stage: test
  cache:
    - <<: *cargo_registry
      policy: pull
    - <<: *cargo_tools
    - key: cargo-coverage-artifacts
      paths:
        - target-coverage/
  script:
    - cargo tarpaulin --verbose --ignore-tests --skip-clean --target-dir target-coverage/
  coverage: '/^\d+.\d+% coverage/'

lint:
  stage: test
  cache:
    - <<: *cargo_registry
      policy: pull
    - <<: *cargo_artifacts
      policy: pull
  script:
    - rustup component add clippy
    - cargo clippy -- -D warnings
    
format:
  stage: test
  cache: []
  script:
    - cargo fmt --check

audit:
  stage: test
  cache:
    - <<: *cargo_registry
      policy: pull
    - <<: *cargo_tools
  script:
    - cargo deny check
